# Created by newuser for 5.8

# Keybinds Config
#bindkey '^[[D'    backward-char                           # left       move cursor one char backward
#bindkey '^[[C'    forward-char                            # right      move cursor one char forward
#bindkey '^[[A'    history-substring-search-up             # up         prev command in history
#bindkey '^[[B'    history-substring-search-down           # down       next command in local history
#bindkey '^[[H'    beginning-of-line                       # home       go to the beginning of line
#bindkey '^[[F'    end-of-line                             # end        go to the end of line
#bindkey '^?'      backward-delete-char                    # bs         delete one char backward
#bindkey '^[[3~'   delete-char                             # delete     delete one char forward
#bindkey '^[[1;5C' forward-word                            # ctrl+right go forward one word
#bindkey '^[[1;5D' backward-word                           # ctrl+left  go backward one word
#bindkey '^H'      backward-kill-word                      # ctrl+bs    delete previous word
#bindkey '^[[3;5~' kill-word                               # ctrl+del   delete next word
#bindkey '^N'      kill-buffer                             # ctrl+n     delete all lines
typeset -g -A key
key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[Shift-Tab]="${terminfo[kcbt]}"
# setup key accordingly
[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"      beginning-of-line
[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"       end-of-line
[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"    overwrite-mode
[[ -n "${key[Backspace]}" ]] && bindkey -- "${key[Backspace]}" backward-delete-char
[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"    delete-char
[[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"        up-line-or-history
[[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"      down-line-or-history
[[ -n "${key[Left]}"      ]] && bindkey -- "${key[Left]}"      backward-char
[[ -n "${key[Right]}"     ]] && bindkey -- "${key[Right]}"     forward-char
[[ -n "${key[PageUp]}"    ]] && bindkey -- "${key[PageUp]}"    beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"  ]] && bindkey -- "${key[PageDown]}"  end-of-buffer-or-history
[[ -n "${key[Shift-Tab]}" ]] && bindkey -- "${key[Shift-Tab]}" reverse-menu-complete
# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
	autoload -Uz add-zle-hook-widget
	function zle_application_mode_start { echoti smkx }
	function zle_application_mode_stop { echoti rmkx }
	add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
	add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi

# History search
autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
[[ -n "${key[Up]}"   ]] && bindkey -- "${key[Up]}"   up-line-or-beginning-search
[[ -n "${key[Down]}" ]] && bindkey -- "${key[Down]}" down-line-or-beginning-search

# Command completion
autoload -Uz compinit promptinit
compinit
promptinit

# Autocompletion with arrow-key
zstyle ':completion:*' menu select

neofetch

# Function to change directory
function startblog() {
    sh start.sh && exit
}

# Alias to manage dogfiles repository
alias config='/usr/bin/git --git-dir=/home/angel/dotfiles/ --work-tree=/home/angel'
